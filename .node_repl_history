bike.save()
bike
                                                                                                                        })
                                                                                                                        console.log(err)
                                                                                                                    console.log('Something is Wrong')
                                                                                                                }).catch(err => {
                                                                                                                console.log('It Worked');
                                                                                                        .then(data => {
                                                                                                    bike.save()
                                                                                                    })
                                                                                                    price : 599
                                                                                                name: 'Mountain Bike',
                                                                                            const bike = new Product({  
                                                                                            const Product = mongoose.model('Product', productSchema);
                                                                                            })
                                                                                    }
                                                                                default: false
                                                                        type: Boolean,
                                                                onsale: {   
                                                            },
                                                        required: true
                                                type: Number,
                                        price: {
                                    },
                                required: true
                        type: String,
                name: {
            const productSchema = new mongoose.Schema({
            })
            console.log(err)
        console.log("Ohh No Error !!!")
    .catch(err => {
    })
    console.log(" Connection Open !!!!")
.then(() =>{
mongoose.connect('mongodb://localhost:27017/shopApps')
mongoose.set('strictQuery', true)
const mongoose = require('mongoose');
.load product.js
bike
                                        })
                                        console.log('It Worked');
                                    .then(data => {
                                    ])
                                    { title: 'Moonrise Kingdom', year: 2012, score: 7.3, rating: 'pG-13' }
                                { title: 'Stand By Me', year: 1986, score: 8.6, rating: 'R' },
                            { title: 'The Iron Giant', year: 1999, score: 7.5, rating: 'PG' },
                        { title: 'Alien', year: 1979, score: 8.1, rating: 'R' },
                    { title: 'Amelie', year: 2001 , score: 8.3, rating: 'R' },
                Movie.insertMany([
                //Inserting multiple movies
                // const movieName = new Movie({ title: 'Your Name', year: 2016, score: 8.4, rating: 'R' });
                //Inserting Single Movie 
                const Movie = mongoose.model('Movie', movieSchema);
                });
                title: String, year: Number, score: Number, rating: String
            const movieSchema = new mongoose.Schema({
            })
            console.log(err)
        console.log("Ohh No Error !!!")
    .catch(err => {
    })
    console.log(" Connection Open !!!!")
.then(() =>{
mongoose.connect('mongodb://localhost:27017/movieApps')
mongoose.set('strictQuery', true)
const mongoose = require('mongoose');
.load index.js
.load
movieName.save()
movieName
                const movieName = new Movie({ title: 'Your Name', year: 2016, score: 8.4, rating: 'R' });
                const Movie = mongoose.model('Movie', movieSchema);
                //Inserting Single Movie 
                });
                title: String, year: Number, score: Number, rating: String
            const movieSchema = new mongoose.Schema({
            })
            console.log(err)
        console.log("Ohh No Error !!!")
    .catch(err => {
    })
    console.log(" Connection Open !!!!")
.then(() =>{
mongoose.connect('mongodb://localhost:27017/movieApps')
mongoose.set('strictQuery', true)
const mongoose = require('mongoose');
.load index.js
.help
.exit
setTimeout(() => console.log("Hello Good Morning Guys, How are you all "), 3000 )
global.setTimeout(() => console.log("Yash Kaskar"), 3000 )
global
window
windows
document
document.getElementById
"hello" +  "world" +  "Yash"
"hello" "world" "Yash"
1+3
.help
.exit
exit
.exit
.exir
.exit
cd e:/
pwd
tammy.fullName
tammy
const tammy = new Person({first : 'Tammy', last: 'Chow'})
                       const Person = mongoose.model('Person', personSchema);
                       })
                       return `${this.first} ${this.last}`  
                     personSchema.virtual('fullName').get(function(){
                     })
                     last : String
                 first : String,
             const personSchema = new mongoose.Schema({
            })
            console.log(err)
        console.log("Ohh No Error !!!")
    .catch(err => {
    })
    console.log(" Connection Open !!!!")
.then(() =>{
mongoose.connect('mongodb://localhost:27017/shopApp', {useNewUrlParser: true, useUnifiedTopology: true})
const mongoose = require('mongoose');
.load person.js
tammy.save()
tammy.fullName
tammy
const tammy = new Person({first:'Tammy',last:'Chow'})
                       const Person = mongoose.model('Person', personSchema);
                       })
                       return `${this.first} ${this.last}`  
                     personSchema.virtual('fullName').get(function(){
                     })
                     last : String
                 first : String,
             const personSchema = new mongoose.Schema({
            })
            console.log(err)
        console.log("Ohh No Error !!!")
    .catch(err => {
    })
    console.log(" Connection Open !!!!")
.then(() =>{
mongoose.connect('mongodb://localhost:27017/personalClothing', {useNewUrlParser: true, useUnifiedTopology: true})
const mongoose = require('mongoose');
.load person.js
                       const Person = mongoose.model('Person', personSchema);
                       })
                       return `${this.first} ${this.last}`  
                     personSchema.virtual('fullName').get(function(){
                     })
                     last : String
                 first : String,
             const personSchema = new mongoose.Schema({
            })
            console.log(err)
        console.log("Ohh No Error !!!")
    .catch(err => {
    })
    console.log(" Connection Open !!!!")
.then(() =>{
mongoose.connect('mongodb://localhost:27017/personalClothing', {useNewUrlParser: true, useUnifiedTopology: true})
const mongoose = require('mongoose');
.load person.js
.load person.jss
cd ..
node index.js
toofan.save()
toofan
                                                ])
                                                { title : 'Chichoree', year : 2017, score: 5, rating: 'R'}
                                            { title : 'Bhag Mikha Bhag', year : 2014, score: 5, rating: 'R'},
                                        { title : 'Godzilla', year : 2021, score: 4, rating: 'P.G'},
                                    { title : 'Life of Pie', year : 2014, score: 4.5, rating: 'R'},
                                { title : 'Toofan', year : 2021, score: 5, rating: 'R'},
                            Movie.insertMany([
                            const toofan = new Movie({ title : 'Toofan', year : 2021, score: 5, rating: 'R'})
                            const Movie = mongoose.model('Movie', movieSchema);
                            });
                            rating : String
                        score : Number,
                    year : Number,
                title : String ,
            const movieSchema = new mongoose.Schema({
            })
            console.log(err)
        console.log("Ohh No Error !!!")
    .catch(err => {
    })
    console.log(" Connection Open !!!!")
.then(() =>{
mongoose.connect('mongodb://localhost:27017/movieApp', {useNewUrlParser: true, useUnifiedTopology: true})
const mongoose = require('mongoose');
.load index.js
toofan.save()
toofan
                            const toofan = new Movie({ title : 'Toofan', year : 2021, score: 5, rating: 'R'})
                            const Movie = mongoose.model('Movie', movieSchema);
                            });
                            rating : String
                        score : Number,
                    year : Number,
                title : String ,
            const movieSchema = new mongoose.Schema({
            })
            console.log(err)
        console.log("Ohh No Error !!!")
    .catch(err => {
    })
    console.log(" Connection Open !!!!")
.then(() =>{
mongoose.connect('mongodb://localhost:27017/movieApp', {useNewUrlParser: true, useUnifiedTopology: true})
const mongoose = require('mongoose');
.load index.js
                            new Movie({ title : 'Toofan', year : 2021, score: 5, rating: 'R'})
                            const Movie = mongoose.model('Movie', movieSchema);
                            });
                            rating : String
                        score : Number,
                    year : Number,
                title : String ,
            const movieSchema = new mongoose.Schema({
            })
            console.log(err)
        console.log("Ohh No Error !!!")
    .catch(err => {
    })
    console.log(" Connection Open !!!!")
.then(() =>{
mongoose.connect('mongodb://localhost:27017/movieApp', {useNewUrlParser: true, useUnifiedTopology: true})
const mongoose = require('mongoose');
.load index.js
node
amadeus
                            new Movie({ title : 'Toofan', year : 2021, score: 5, rating: 'R'})
                            const Movie = mongoose.model('Movie', movieSchema);
                            });
                            rating : String
                        score : Number,
                    year : Number,
                title : String ,
            const movieSchema = new mongoose.Schema({
            })
            console.log(err)
        console.log("Ohh No Error !!!")
    .catch(err => {
    })
    console.log(" Connection Open !!!!")
.then(() =>{
mongoose.connect('mongodb://localhost:27017/movieApp', {useNewUrlParser: true, useUnifiedTopology: true})
const mongoose = require('mongoose');
.load index.js
amandeus.save()
amadeus.save()
                            new Movie({ title : 'Toofan', year : 2021, score: 5, rating: 'R'})
                            const Movie = mongoose.model('Movie', movieSchema);
                            });
                            rating : String
                        score : Number,
                    year : Number,
                title : String ,
            const movieSchema = new mongoose.Schema({
            })
            console.log(err)
        console.log("Ohh No Error !!!")
    .catch(err => {
    })
    console.log(" Connection Open !!!!")
.then(() =>{
mongoose.connect('mongodb://localhost:27017/movieApp', {useNewUrlParser: true, useUnifiedTopology: true})
const mongoose = require('mongoose');
.load index.js
                            new Movie({ title : 'Toofan', year : 2021, score: 5, rating: 'R'})
                            const Movie = mongoose.model('Movie', movieSchema);
                            });
                            rating : String
                        score : Number,
                    year : Number,
                title : String ,
            const movieSchema = new mongoose.Schema({
            })
            console.log(err)
        console.log("Ohh No Error !!!")
    .catch(err => {
    })
    console.log(" Connection Open !!!!")
.then(() =>{
mongoose.connect('mongodb://localhost:27017/movieApp', {useNewUrlParser: true, useUnifiedTopology: true})
const mongoose = require('mongoose');
.load index.js
amadeus.save()
                            new Movie({ title : 'Toofan', year : 2021, score: 5, rating: 'R'})
                            const Movie = mongoose.model('Movie', movieSchema);
                            });
                            rating : String
                        score : Number,
                    year : Number,
                title : String ,
            const movieSchema = new mongoose.Schema({
            })
            console.log(err)
        console.log("Ohh No Error !!!")
    .catch(err => {
    })
    console.log(" Connection Open !!!!")
.then(() =>{
mongoose.connect('mongodb://localhost:27017/movieApp', {useNewUrlParser: true, useUnifiedTopology: true})
const mongoose = require('mongoose');
.load index.js
                            new Movie({ title : 'Toofan', year : 2021, score: 5, rating: 'R'})
                            const Movie = mongoose.model('Movie', movieSchema);
                            });
                            rating : String
                        score : Number,
                    year : Number,
                title : String ,
            const movieSchema = new mongoose.Schema({
            })
            console.log(err)
        console.log("Ohh No Error !!!")
    .catch(err => {
    })
    console.log(" Connection Open !!!!")
.then(() =>{
mongoose.connect('mongodb://localhost:27017/movieApp', {useNewUrlParser: true, useUnifiedTopology: true})
const mongoose = require('mongoose');
.load index.js
.exit
process
.exit
.clear
"hello"+ "world"
1+2
.help
.exit
clear